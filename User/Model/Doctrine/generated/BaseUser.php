<?php

/**
 * BaseUser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $Email
 * @property string $Password
 * @property string $Firstname
 * @property string $Lastname
 * @property string $Phone
 * @property string $Salutation
 * @property string $Openid
 * @property bool $Enabled
 * @property Doctrine_Collection $UserRole
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUser extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('user');
        $this->hasColumn('Email', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('Password', 'string', 511, array(
             'type' => 'string',
             'length' => '511',
             ));
        $this->hasColumn('Firstname', 'string', 100, array(
             'type' => 'string',
             'length' => '100',
             ));
        $this->hasColumn('Lastname', 'string', 100, array(
             'type' => 'string',
             'length' => '100',
             ));
        $this->hasColumn('Phone', 'string', 64, array(
             'type' => 'string',
             'length' => '64',
             ));
        $this->hasColumn('Salutation', 'string', 50, array(
             'type' => 'string',
             'length' => '50',
             ));
        $this->hasColumn('Openid', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('Enabled', 'bool', null, array(
             'type' => 'bool',
             ));


        $this->index('Email_index', array(
             'fields' => 
             array(
              0 => 'Email',
             ),
             'type' => 'unique',
             ));
        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('UserRole', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}