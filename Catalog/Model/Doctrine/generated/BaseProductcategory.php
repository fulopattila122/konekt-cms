<?php

/**
 * BaseProductcategory
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $Name
 * @property string $Slug
 * @property integer $Productgroup_id
 * @property integer $Rank
 * @property string $Imagegroupname
 * @property boolean $IsActive
 * @property integer $ParentId
 * @property Productgroup $Productgroup
 * @property Doctrine_Collection $Products
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProductcategory extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('productcategory');
        $this->hasColumn('Name', 'string', 100, array(
             'type' => 'string',
             'length' => '100',
             ));
        $this->hasColumn('Slug', 'string', 100, array(
             'type' => 'string',
             'length' => '100',
             ));
        $this->hasColumn('Productgroup_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('Rank', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('Imagegroupname', 'string', 50, array(
             'type' => 'string',
             'length' => '50',
             ));
        $this->hasColumn('IsActive', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 1,
             ));
        $this->hasColumn('ParentId', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('Shippingcategory', 'string', '50', array(
            'type' => 'string',
            'length' => '50',
        ));

        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Productgroup', array(
             'local' => 'Productgroup_id',
             'foreign' => 'id'));

        $this->hasMany('Product as Products', array(
             'local' => 'id',
             'foreign' => 'Productcategory_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $i18n0 = new Doctrine_Template_I18n(array(
             'fields' => 
             array(
              0 => 'Name',
              1 => 'Slug',
             ),
             ));
        $this->actAs($timestampable0);
        $this->actAs($i18n0);
    }
}